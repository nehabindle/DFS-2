class Solution {
    int[][] dirs = {{0,1},{0,-1},{1,0},{-1,0}};
        
    public int numIslands(char[][] grid) {
        
        if(grid == null || grid.length==0)
        {
            return 0;
        }
        
        int count = 0;
        for(int i = 0;i<grid.length;i++)
        {
            for(int j=0;j<grid[0].length;j++)
            {
                if(grid[i][j] == '1')
                {
                   count=count+ dfs(grid,i,j);  
                }                     
            }
        }
        return count;
    }
    
    private int dfs(char[][] grid, int i, int j)
    {
        
        //Base Case
        if(i<0 || i>=grid.length || j<0 || j>=grid[0].length || grid[i][j] == '0')
        {
            return 0;
        }
        
        //Logic
     
       grid[i][j] = '0';
        for(int[] dir:dirs)
        {
           int i1=dir[0]+i;
           int j1=dir[1]+j;
            dfs(grid,i1,j1);
        }
       
       // dfs(grid,i,j, dirs);
       // dfs(grid,i+1,j);
       // dfs(grid,i-1,j);
       // dfs(grid,i,j-1);
       return 1;
    }
}
